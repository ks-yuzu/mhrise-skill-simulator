{"version":3,"mappings":"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","names":["normalize_path","path","trailing_slash","decode_pathname","pathname","decode_params","params","key","tracked_url_properties","make_trackable","url","callback","tracked","property","value","disable_hash","DATA_SUFFIX","add_data_suffix","hash","i","buffer","native_fetch","input","init","cache","initial_fetch","resource","opts","selector","build_selector","script","ttl","body","subsequent_fetch","resolved","cached","param_pattern","parse_route_id","id","get_route_segments","segment","rest_match","optional_match","parts","content","escape","code","match","is_optional","is_rest","name","matcher","affects_path","route","exec","matchers","result","values","buffered","param","j","next","str","parse","nodes","server_loads","dictionary","layouts_with_server_load","leaf","layouts","errors","pattern","n","create_layout_loader","create_leaf_loader","uses_server_data","ctx","switch_value","insert_hydration","target","afterUpdate","stores","navigated","title","mounted","$$invalidate","unsubscribe","page","__vitePreload","hooks","error","HttpError","status","Redirect","location","unwrap_promises","object","_a","UNDEFINED","HOLE","NAN","POSITIVE_INFINITY","NEGATIVE_INFINITY","NEGATIVE_ZERO","unflatten","parsed","hydrate","hydrated","index","standalone","set","map","obj","array","routes","default_layout_loader","default_error_loader","scroll_positions","SCROLL_KEY","update_scroll_positions","scroll_state","create_client","invalidated","load_cache","callbacks","current","started","autoscroll","updating","navigating","hash_navigating","force_invalidation","root","current_history_index","INDEX_KEY","scroll","token","pending_invalidate","invalidate","intent","get_navigation_intent","update","goto","redirect_chain","nav_token","get_base_uri","navigate","noScroll","keepFocus","invalidateAll","preload_data","load_route","preload_code","pathnames","promises","r","load","navigation_result","server_fallback","handle_error","load_root_error_page","_b","native_navigation","change","details","post_update","pre_update","initialize","keepfocus","reset_focus","tick","deep_linked","style","Root","navigation","add_url_properties","fn","get_navigation_result_from_branch","filtered","branch","slash","node","branch_node","form","data","data_changed","previous","print_error","replacement","load_node","uses","loader","depends","deps","dep","href","load_input","requested","parent","_c","server_data_node","_d","_e","_g","has_changed","parent_changed","route_changed","url_changed","create_data_node","loaders","server_data","invalid_server_nodes","acc","invalid","load_data","server_data_nodes","branch_promises","p","err","error_load","load_nearest_error_page","invalidating","root_layout","root_error","is_external_url","base","before_navigate","should_block","delta","cancellable","blocked","accepted","setup_preload","mousemove_timeout","event","preload","tap","observer","entries","entry","element","priority","a","find_anchor","get_link_info","external","options","get_router_options","after_navigate","PRELOAD_PRIORITIES","onMount","props","e","has","nonhash","submitter","reload","noscroll","link","node_ids","data_url","x","res","devalue.unflatten","properties","type","prop","autofocus","tabindex","start","set_paths","paths","set_version","version","client"],"sources":["../../../../../node_modules/@sveltejs/kit/src/utils/url.js","../../../../../node_modules/@sveltejs/kit/src/runtime/hash.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/fetcher.js","../../../../../node_modules/@sveltejs/kit/src/utils/routing.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/parse.js","../../../../generated/root.svelte","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../../node_modules/@sveltejs/kit/src/runtime/control.js","../../../../../node_modules/@sveltejs/kit/src/utils/promises.js","../../../../../node_modules/devalue/src/utils.js","../../../../../node_modules/devalue/src/uneval.js","../../../../../node_modules/devalue/src/constants.js","../../../../../node_modules/devalue/src/parse.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/client.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/start.js"],"sourcesContent":["const absolute = /^([a-z]+:)?\\/?\\//;\nconst scheme = /^[a-z]+:/;\n\n/**\n * @param {string} base\n * @param {string} path\n */\nexport function resolve(base, path) {\n\tif (scheme.test(path)) return path;\n\tif (path[0] === '#') return base + path;\n\n\tconst base_match = absolute.exec(base);\n\tconst path_match = absolute.exec(path);\n\n\tif (!base_match) {\n\t\tthrow new Error(`bad base path: \"${base}\"`);\n\t}\n\n\tconst baseparts = path_match ? [] : base.slice(base_match[0].length).split('/');\n\tconst pathparts = path_match ? path.slice(path_match[0].length).split('/') : path.split('/');\n\n\tbaseparts.pop();\n\n\tfor (let i = 0; i < pathparts.length; i += 1) {\n\t\tconst part = pathparts[i];\n\t\tif (part === '.') continue;\n\t\telse if (part === '..') baseparts.pop();\n\t\telse baseparts.push(part);\n\t}\n\n\tconst prefix = (path_match && path_match[0]) || (base_match && base_match[0]) || '';\n\n\treturn `${prefix}${baseparts.join('/')}`;\n}\n\n/** @param {string} path */\nexport function is_root_relative(path) {\n\treturn path[0] === '/' && path[1] !== '/';\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nexport function normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/**\n * Decode pathname excluding %25 to prevent further double decoding of params\n * @param {string} pathname\n */\nexport function decode_pathname(pathname) {\n\treturn pathname.split('%25').map(decodeURI).join('%25');\n}\n\n/** @param {Record<string, string>} params */\nexport function decode_params(params) {\n\tfor (const key in params) {\n\t\t// input has already been decoded by decodeURI\n\t\t// now handle the rest\n\t\tparams[key] = decodeURIComponent(params[key]);\n\t}\n\n\treturn params;\n}\n\n/**\n * URL properties that could change during the lifetime of the page,\n * which excludes things like `origin`\n * @type {Array<keyof URL>}\n */\nconst tracked_url_properties = ['href', 'pathname', 'search', 'searchParams', 'toString', 'toJSON'];\n\n/**\n * @param {URL} url\n * @param {() => void} callback\n */\nexport function make_trackable(url, callback) {\n\tconst tracked = new URL(url);\n\n\tfor (const property of tracked_url_properties) {\n\t\tlet value = tracked[property];\n\n\t\tObject.defineProperty(tracked, property, {\n\t\t\tget() {\n\t\t\t\tcallback();\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\n\tif (!__SVELTEKIT_BROWSER__) {\n\t\t// @ts-ignore\n\t\ttracked[Symbol.for('nodejs.util.inspect.custom')] = (depth, opts, inspect) => {\n\t\t\treturn inspect(url, opts);\n\t\t};\n\t}\n\n\tdisable_hash(tracked);\n\n\treturn tracked;\n}\n\n/**\n * Disallow access to `url.hash` on the server and in `load`\n * @param {URL} url\n */\nexport function disable_hash(url) {\n\tObject.defineProperty(url, 'hash', {\n\t\tget() {\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead'\n\t\t\t);\n\t\t}\n\t});\n}\n\n/**\n * Disallow access to `url.search` and `url.searchParams` during prerendering\n * @param {URL} url\n */\nexport function disable_search(url) {\n\tfor (const property of ['search', 'searchParams']) {\n\t\tObject.defineProperty(url, property, {\n\t\t\tget() {\n\t\t\t\tthrow new Error(`Cannot access url.${property} on a page with prerendering enabled`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst DATA_SUFFIX = '/__data.json';\n\n/** @param {string} pathname */\nexport function has_data_suffix(pathname) {\n\treturn pathname.endsWith(DATA_SUFFIX);\n}\n\n/** @param {string} pathname */\nexport function add_data_suffix(pathname) {\n\treturn pathname.replace(/\\/$/, '') + DATA_SUFFIX;\n}\n\n/** @param {string} pathname */\nexport function strip_data_suffix(pathname) {\n\treturn pathname.slice(0, -DATA_SUFFIX.length);\n}\n","/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nexport function hash(value) {\n\tlet hash = 5381;\n\n\tif (typeof value === 'string') {\n\t\tlet i = value.length;\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else if (ArrayBuffer.isView(value)) {\n\t\tconst buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t\tlet i = buffer.length;\n\t\twhile (i) hash = (hash * 33) ^ buffer[--i];\n\t} else {\n\t\tthrow new TypeError('value must be a string or TypedArray');\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n","import { hash } from '../hash.js';\n\nlet loading = 0;\n\nexport const native_fetch = window.fetch;\n\nexport function lock_fetch() {\n\tloading += 1;\n}\n\nexport function unlock_fetch() {\n\tloading -= 1;\n}\n\nif (import.meta.env.DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\n\t\t// check if fetch was called via load_node. the lock method only checks if it was called at the\n\t\t// same time, but not necessarily if it was called from `load`\n\t\t// we use just the filename as the method name sometimes does not appear on the CI\n\t\tconst heuristic = can_inspect_stack_trace\n\t\t\t? stack.includes('src/runtime/client/client.js')\n\t\t\t: loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/load#making-fetch-requests`\n\t\t\t);\n\t\t}\n\n\t\tconst method = input instanceof Request ? input.method : init?.method || 'GET';\n\n\t\tif (method !== 'GET') {\n\t\t\tconst url = new URL(input instanceof Request ? input.url : input.toString(), document.baseURI)\n\t\t\t\t.href;\n\t\t\tcache.delete(url);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n} else {\n\twindow.fetch = (input, init) => {\n\t\tconst method = input instanceof Request ? input.method : init?.method || 'GET';\n\n\t\tif (method !== 'GET') {\n\t\t\tconst url = new URL(input instanceof Request ? input.url : input.toString(), document.baseURI)\n\t\t\t\t.href;\n\t\t\tcache.delete(url);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\nconst cache = new Map();\n\n/**\n * Should be called on the initial run of load functions that hydrate the page.\n * Saves any requests with cache-control max-age to the cache.\n * @param {RequestInfo | URL} resource\n * @param {RequestInit} [opts]\n */\nexport function initial_fetch(resource, opts) {\n\tconst selector = build_selector(resource, opts);\n\n\tconst script = document.querySelector(selector);\n\tif (script?.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\n\t\tconst ttl = script.getAttribute('data-ttl');\n\t\tif (ttl) cache.set(selector, { body, init, ttl: 1000 * Number(ttl) });\n\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n\n/**\n * Tries to get the response from the cache, if max-age allows it, else does a fetch.\n * @param {RequestInfo | URL} resource\n * @param {string} resolved\n * @param {RequestInit} [opts]\n */\nexport function subsequent_fetch(resource, resolved, opts) {\n\tif (cache.size > 0) {\n\t\tconst selector = build_selector(resource, opts);\n\t\tconst cached = cache.get(selector);\n\t\tif (cached) {\n\t\t\tif (performance.now() < cached.ttl) {\n\t\t\t\treturn new Response(cached.body, cached.init);\n\t\t\t}\n\n\t\t\tcache.delete(selector);\n\t\t}\n\t}\n\n\treturn native_fetch(resolved, opts);\n}\n\n/**\n * Build the cache key for a given request\n * @param {RequestInfo | URL} resource\n * @param {RequestInit} [opts]\n */\nfunction build_selector(resource, opts) {\n\tconst url = JSON.stringify(resource instanceof Request ? resource.url : resource);\n\n\tlet selector = `script[data-sveltekit-fetched][data-url=${url}]`;\n\n\tif (opts?.body && (typeof opts.body === 'string' || ArrayBuffer.isView(opts.body))) {\n\t\tselector += `[data-hash=\"${hash(opts.body)}\"]`;\n\t}\n\n\treturn selector;\n}\n","const param_pattern = /^(\\[)?(\\.\\.\\.)?(\\w+)(?:=(\\w+))?(\\])?$/;\n\n/**\n * Creates the regex pattern, extracts parameter names, and generates types for a route\n * @param {string} id\n */\nexport function parse_route_id(id) {\n\t/** @type {import('types').RouteParam[]} */\n\tconst params = [];\n\n\tconst pattern =\n\t\tid === '/'\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${get_route_segments(id)\n\t\t\t\t\t\t.map((segment) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst rest_match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (rest_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: rest_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: rest_match[2],\n\t\t\t\t\t\t\t\t\toptional: false,\n\t\t\t\t\t\t\t\t\trest: true,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// special case — /[[optional]]/ could contain zero segments\n\t\t\t\t\t\t\tconst optional_match = /^\\[\\[(\\w+)(?:=(\\w+))?\\]\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (optional_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: optional_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: optional_match[2],\n\t\t\t\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\t\t\t\trest: false,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/([^/]+))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!segment) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst parts = segment.split(/\\[(.+?)\\](?!\\])/);\n\t\t\t\t\t\t\tconst result = parts\n\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('x+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(String.fromCharCode(parseInt(content.slice(2), 16)));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('u+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(\n\t\t\t\t\t\t\t\t\t\t\t\tString.fromCharCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\t...content\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.slice(2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map((code) => parseInt(code, 16))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst match = param_pattern.exec(content);\n\t\t\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`Invalid param: ${content}. Params and matcher names can only have underscores and alphanumeric characters.`\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst [, is_optional, is_rest, name, matcher] = match;\n\t\t\t\t\t\t\t\t\t\t// It's assumed that the following invalid route id cases are already checked\n\t\t\t\t\t\t\t\t\t\t// - unbalanced brackets\n\t\t\t\t\t\t\t\t\t\t// - optional param following rest param\n\n\t\t\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\t\t\t\t\t\toptional: !!is_optional,\n\t\t\t\t\t\t\t\t\t\t\trest: !!is_rest,\n\t\t\t\t\t\t\t\t\t\t\tchained: is_rest ? i === 1 && parts[0] === '' : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn is_rest ? '(.*?)' : is_optional ? '([^/]*)?' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn escape(content);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.join('');\n\n\t\t\t\t\t\t\treturn '/' + result;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}/?$`\n\t\t\t  );\n\n\treturn { pattern, params };\n}\n\n/**\n * Returns `false` for `(group)` segments\n * @param {string} segment\n */\nfunction affects_path(segment) {\n\treturn !/^\\([^)]+\\)$/.test(segment);\n}\n\n/**\n * Splits a route id into its segments, removing segments that\n * don't affect the path (i.e. groups). The root route is represented by `/`\n * and will be returned as `['']`.\n * @param {string} route\n * @returns string[]\n */\nexport function get_route_segments(route) {\n\treturn route.slice(1).split('/').filter(affects_path);\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {import('types').RouteParam[]} params\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nexport function exec(match, params, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst result = {};\n\n\tconst values = match.slice(1);\n\n\tlet buffered = '';\n\n\tfor (let i = 0; i < params.length; i += 1) {\n\t\tconst param = params[i];\n\t\tlet value = values[i];\n\n\t\tif (param.chained && param.rest && buffered) {\n\t\t\t// in the `[[lang=lang]]/[...rest]` case, if `lang` didn't\n\t\t\t// match, we roll it over into the rest value\n\t\t\tvalue = value ? buffered + '/' + value : buffered;\n\t\t}\n\n\t\tbuffered = '';\n\n\t\tif (value === undefined) {\n\t\t\t// if `value` is undefined, it means this is\n\t\t\t// an optional or rest parameter\n\t\t\tif (param.rest) result[param.name] = '';\n\t\t} else {\n\t\t\tif (param.matcher && !matchers[param.matcher](value)) {\n\t\t\t\t// in the `/[[a=b]]/[[c=d]]` case, if the value didn't satisfy the `b` matcher,\n\t\t\t\t// try again with the next segment by shifting values rightwards\n\t\t\t\tif (param.optional && param.chained) {\n\t\t\t\t\t// @ts-expect-error TypeScript is... wrong\n\t\t\t\t\tlet j = values.indexOf(undefined, i);\n\n\t\t\t\t\tif (j === -1) {\n\t\t\t\t\t\t// we can't shift values any further, so hang on to this value\n\t\t\t\t\t\t// so it can be rolled into a subsequent `[...rest]` param\n\t\t\t\t\t\tconst next = params[i + 1];\n\t\t\t\t\t\tif (next?.rest && next.chained) {\n\t\t\t\t\t\t\tbuffered = value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (j >= i) {\n\t\t\t\t\t\tvalues[j] = values[j - 1];\n\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// otherwise, if the matcher returns `false`, the route did not match\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult[param.name] = value;\n\t\t}\n\t}\n\n\tif (buffered) return;\n\treturn result;\n}\n\n/** @param {string} str */\nfunction escape(str) {\n\treturn (\n\t\tstr\n\t\t\t.normalize()\n\t\t\t// escape [ and ] before escaping other characters, since they are used in the replacements\n\t\t\t.replace(/[[\\]]/g, '\\\\$&')\n\t\t\t// replace %, /, ? and # with their encoded versions because decode_pathname leaves them untouched\n\t\t\t.replace(/%/g, '%25')\n\t\t\t.replace(/\\//g, '%2[Ff]')\n\t\t\t.replace(/\\?/g, '%3[Ff]')\n\t\t\t.replace(/#/g, '%23')\n\t\t\t// escape characters that have special meaning in regex\n\t\t\t.replace(/[.*+?^${}()|\\\\]/g, '\\\\$&')\n\t);\n}\n","import { exec, parse_route_id } from '../../utils/routing.js';\n\n/**\n * @param {import('types').CSRPageNodeLoader[]} nodes\n * @param {number[]} server_loads\n * @param {typeof import('__GENERATED__/client-manifest.js').dictionary} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nexport function parse(nodes, server_loads, dictionary, matchers) {\n\tconst layouts_with_server_load = new Set(server_loads);\n\n\treturn Object.entries(dictionary).map(([id, [leaf, layouts, errors]]) => {\n\t\tconst { pattern, params } = parse_route_id(id);\n\n\t\tconst route = {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, params, matchers);\n\t\t\t},\n\t\t\terrors: [1, ...(errors || [])].map((n) => nodes[n]),\n\t\t\tlayouts: [0, ...(layouts || [])].map(create_layout_loader),\n\t\t\tleaf: create_leaf_loader(leaf)\n\t\t};\n\n\t\t// bit of a hack, but ensures that layout/error node lists are the same\n\t\t// length, without which the wrong data will be applied if the route\n\t\t// manifest looks like `[[a, b], [c,], d]`\n\t\troute.errors.length = route.layouts.length = Math.max(\n\t\t\troute.errors.length,\n\t\t\troute.layouts.length\n\t\t);\n\n\t\treturn route;\n\t});\n\n\t/**\n\t * @param {number} id\n\t * @returns {[boolean, import('types').CSRPageNodeLoader]}\n\t */\n\tfunction create_leaf_loader(id) {\n\t\t// whether or not the route uses the server data is\n\t\t// encoded using the ones' complement, to save space\n\t\tconst uses_server_data = id < 0;\n\t\tif (uses_server_data) id = ~id;\n\t\treturn [uses_server_data, nodes[id]];\n\t}\n\n\t/**\n\t * @param {number | undefined} id\n\t * @returns {[boolean, import('types').CSRPageNodeLoader] | undefined}\n\t */\n\tfunction create_layout_loader(id) {\n\t\t// whether or not the layout uses the server data is\n\t\t// encoded in the layouts array, to save space\n\t\treturn id === undefined ? id : [layouts_with_server_load.has(id), nodes[id]];\n\t}\n}\n","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\timport { browser } from '$app/environment';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let form;\n\texport let data_0 = null;\n\texport let data_1 = null;\n\n\tif (!browser) {\n\t\tsetContext('__svelte__', stores);\n\t}\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} data={data_0}>\n\t\t<svelte:component this={components[1]} data={data_1} {form} />\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} data={data_0} {form} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const nodes = [() => import('./nodes/0'),\n\t() => import('./nodes/1'),\n\t() => import('./nodes/2')];\n\nexport const server_loads = [];\n\nexport const dictionary = {\n\t\"/\": [2]\n};\n\nexport const hooks = {\n\thandleError: (({ error }) => { console.error(error) }),\n};","export class HttpError {\n\t/**\n\t * @param {number} status\n\t * @param {{message: string} extends App.Error ? (App.Error | string | undefined) : App.Error} body\n\t */\n\tconstructor(status, body) {\n\t\tthis.status = status;\n\t\tif (typeof body === 'string') {\n\t\t\tthis.body = { message: body };\n\t\t} else if (body) {\n\t\t\tthis.body = body;\n\t\t} else {\n\t\t\tthis.body = { message: `Error: ${status}` };\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this.body);\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n\n/**\n * @template {Record<string, unknown> | undefined} [T=undefined]\n */\nexport class ValidationError {\n\t/**\n\t * @param {number} status\n\t * @param {T} [data]\n\t */\n\tconstructor(status, data) {\n\t\tthis.status = status;\n\t\tthis.data = data;\n\t}\n}\n","/**\n * Given an object, return a new object where all top level values are awaited\n *\n * @param {Record<string, any>} object\n * @returns {Promise<Record<string, any>>}\n */\nexport async function unwrap_promises(object) {\n\tfor (const key in object) {\n\t\tif (typeof object[key]?.then === 'function') {\n\t\t\treturn Object.fromEntries(\n\t\t\t\tawait Promise.all(Object.entries(object).map(async ([key, value]) => [key, await value]))\n\t\t\t);\n\t\t}\n\t}\n\n\treturn object;\n}\n","/** @type {Record<string, string>} */\nexport const escaped = {\n\t'<': '\\\\u003C',\n\t'>': '\\\\u003E',\n\t'/': '\\\\u002F',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t',\n\t'\\0': '\\\\u0000',\n\t'\\u2028': '\\\\u2028',\n\t'\\u2029': '\\\\u2029'\n};\n\nexport class DevalueError extends Error {\n\t/**\n\t * @param {string} message\n\t * @param {string[]} keys\n\t */\n\tconstructor(message, keys) {\n\t\tsuper(message);\n\t\tthis.name = 'DevalueError';\n\t\tthis.path = keys.join('');\n\t}\n}\n\n/** @param {any} thing */\nexport function is_primitive(thing) {\n\treturn Object(thing) !== thing;\n}\n\nconst object_proto_names = Object.getOwnPropertyNames(Object.prototype)\n\t.sort()\n\t.join('\\0');\n\n/** @param {any} thing */\nexport function is_plain_object(thing) {\n\tconst proto = Object.getPrototypeOf(thing);\n\n\treturn (\n\t\tproto === Object.prototype ||\n\t\tproto === null ||\n\t\tObject.getOwnPropertyNames(proto).sort().join('\\0') === object_proto_names\n\t);\n}\n\n/** @param {any} thing */\nexport function get_type(thing) {\n\treturn Object.prototype.toString.call(thing).slice(8, -1);\n}\n\n/** @param {string} str */\nexport function stringify_string(str) {\n\tlet result = '\"';\n\n\tfor (let i = 0; i < str.length; i += 1) {\n\t\tconst char = str.charAt(i);\n\t\tconst code = char.charCodeAt(0);\n\n\t\tif (char === '\"') {\n\t\t\tresult += '\\\\\"';\n\t\t} else if (char in escaped) {\n\t\t\tresult += escaped[char];\n\t\t} else if (code >= 0xd800 && code <= 0xdfff) {\n\t\t\tconst next = str.charCodeAt(i + 1);\n\n\t\t\t// If this is the beginning of a [high, low] surrogate pair,\n\t\t\t// add the next two characters, otherwise escape\n\t\t\tif (code <= 0xdbff && next >= 0xdc00 && next <= 0xdfff) {\n\t\t\t\tresult += char + str[++i];\n\t\t\t} else {\n\t\t\t\tresult += `\\\\u${code.toString(16).toUpperCase()}`;\n\t\t\t}\n\t\t} else {\n\t\t\tresult += char;\n\t\t}\n\t}\n\n\tresult += '\"';\n\treturn result;\n}\n","import {\n\tDevalueError,\n\tescaped,\n\tget_type,\n\tis_primitive,\n\tstringify_string\n} from './utils.js';\n\nconst chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';\nconst unsafe_chars = /[<>\\b\\f\\n\\r\\t\\0\\u2028\\u2029]/g;\nconst reserved =\n\t/^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;\nconst object_proto_names = Object.getOwnPropertyNames(Object.prototype)\n\t.sort()\n\t.join('\\0');\n\n/**\n * Turn a value into the JavaScript that creates an equivalent value\n * @param {any} value\n */\nexport function uneval(value) {\n\tconst counts = new Map();\n\n\t/** @type {string[]} */\n\tconst keys = [];\n\n\t/** @param {any} thing */\n\tfunction walk(thing) {\n\t\tif (typeof thing === 'function') {\n\t\t\tthrow new DevalueError(`Cannot stringify a function`, keys);\n\t\t}\n\n\t\tif (!is_primitive(thing)) {\n\t\t\tif (counts.has(thing)) {\n\t\t\t\tcounts.set(thing, counts.get(thing) + 1);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcounts.set(thing, 1);\n\n\t\t\tconst type = get_type(thing);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'BigInt':\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Boolean':\n\t\t\t\tcase 'Date':\n\t\t\t\tcase 'RegExp':\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t/** @type {any[]} */ (thing).forEach((value, i) => {\n\t\t\t\t\t\tkeys.push(`[${i}]`);\n\t\t\t\t\t\twalk(value);\n\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Set':\n\t\t\t\t\tArray.from(thing).forEach(walk);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Map':\n\t\t\t\t\tfor (const [key, value] of thing) {\n\t\t\t\t\t\tkeys.push(\n\t\t\t\t\t\t\t`.get(${is_primitive(key) ? stringify_primitive(key) : '...'})`\n\t\t\t\t\t\t);\n\t\t\t\t\t\twalk(value);\n\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconst proto = Object.getPrototypeOf(thing);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tproto !== Object.prototype &&\n\t\t\t\t\t\tproto !== null &&\n\t\t\t\t\t\tObject.getOwnPropertyNames(proto).sort().join('\\0') !==\n\t\t\t\t\t\t\tobject_proto_names\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify arbitrary non-POJOs`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Object.getOwnPropertySymbols(thing).length > 0) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify POJOs with symbolic keys`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\tkeys.push(`.${key}`);\n\t\t\t\t\t\twalk(thing[key]);\n\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\twalk(value);\n\n\tconst names = new Map();\n\n\tArray.from(counts)\n\t\t.filter((entry) => entry[1] > 1)\n\t\t.sort((a, b) => b[1] - a[1])\n\t\t.forEach((entry, i) => {\n\t\t\tnames.set(entry[0], get_name(i));\n\t\t});\n\n\t/**\n\t * @param {any} thing\n\t * @returns {string}\n\t */\n\tfunction stringify(thing) {\n\t\tif (names.has(thing)) {\n\t\t\treturn names.get(thing);\n\t\t}\n\n\t\tif (is_primitive(thing)) {\n\t\t\treturn stringify_primitive(thing);\n\t\t}\n\n\t\tconst type = get_type(thing);\n\n\t\tswitch (type) {\n\t\t\tcase 'Number':\n\t\t\tcase 'String':\n\t\t\tcase 'Boolean':\n\t\t\t\treturn `Object(${stringify(thing.valueOf())})`;\n\n\t\t\tcase 'RegExp':\n\t\t\t\treturn `new RegExp(${stringify_string(thing.source)}, \"${\n\t\t\t\t\tthing.flags\n\t\t\t\t}\")`;\n\n\t\t\tcase 'Date':\n\t\t\t\treturn `new Date(${thing.getTime()})`;\n\n\t\t\tcase 'Array':\n\t\t\t\tconst members = /** @type {any[]} */ (thing).map((v, i) =>\n\t\t\t\t\ti in thing ? stringify(v) : ''\n\t\t\t\t);\n\t\t\t\tconst tail = thing.length === 0 || thing.length - 1 in thing ? '' : ',';\n\t\t\t\treturn `[${members.join(',')}${tail}]`;\n\n\t\t\tcase 'Set':\n\t\t\tcase 'Map':\n\t\t\t\treturn `new ${type}([${Array.from(thing).map(stringify).join(',')}])`;\n\n\t\t\tdefault:\n\t\t\t\tconst obj = `{${Object.keys(thing)\n\t\t\t\t\t.map((key) => `${safe_key(key)}:${stringify(thing[key])}`)\n\t\t\t\t\t.join(',')}}`;\n\t\t\t\tconst proto = Object.getPrototypeOf(thing);\n\t\t\t\tif (proto === null) {\n\t\t\t\t\treturn Object.keys(thing).length > 0\n\t\t\t\t\t\t? `Object.assign(Object.create(null),${obj})`\n\t\t\t\t\t\t: `Object.create(null)`;\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t}\n\t}\n\n\tconst str = stringify(value);\n\n\tif (names.size) {\n\t\t/** @type {string[]} */\n\t\tconst params = [];\n\n\t\t/** @type {string[]} */\n\t\tconst statements = [];\n\n\t\t/** @type {string[]} */\n\t\tconst values = [];\n\n\t\tnames.forEach((name, thing) => {\n\t\t\tparams.push(name);\n\n\t\t\tif (is_primitive(thing)) {\n\t\t\t\tvalues.push(stringify_primitive(thing));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = get_type(thing);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Boolean':\n\t\t\t\t\tvalues.push(`Object(${stringify(thing.valueOf())})`);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RegExp':\n\t\t\t\t\tvalues.push(thing.toString());\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Date':\n\t\t\t\t\tvalues.push(`new Date(${thing.getTime()})`);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tvalues.push(`Array(${thing.length})`);\n\t\t\t\t\t/** @type {any[]} */ (thing).forEach((v, i) => {\n\t\t\t\t\t\tstatements.push(`${name}[${i}]=${stringify(v)}`);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Set':\n\t\t\t\t\tvalues.push(`new Set`);\n\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t`${name}.${Array.from(thing)\n\t\t\t\t\t\t\t.map((v) => `add(${stringify(v)})`)\n\t\t\t\t\t\t\t.join('.')}`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Map':\n\t\t\t\t\tvalues.push(`new Map`);\n\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t`${name}.${Array.from(thing)\n\t\t\t\t\t\t\t.map(([k, v]) => `set(${stringify(k)}, ${stringify(v)})`)\n\t\t\t\t\t\t\t.join('.')}`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tvalues.push(\n\t\t\t\t\t\tObject.getPrototypeOf(thing) === null ? 'Object.create(null)' : '{}'\n\t\t\t\t\t);\n\t\t\t\t\tObject.keys(thing).forEach((key) => {\n\t\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t\t`${name}${safe_prop(key)}=${stringify(thing[key])}`\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tstatements.push(`return ${str}`);\n\n\t\treturn `(function(${params.join(',')}){${statements.join(\n\t\t\t';'\n\t\t)}}(${values.join(',')}))`;\n\t} else {\n\t\treturn str;\n\t}\n}\n\n/** @param {number} num */\nfunction get_name(num) {\n\tlet name = '';\n\n\tdo {\n\t\tname = chars[num % chars.length] + name;\n\t\tnum = ~~(num / chars.length) - 1;\n\t} while (num >= 0);\n\n\treturn reserved.test(name) ? `${name}0` : name;\n}\n\n/** @param {string} c */\nfunction escape_unsafe_char(c) {\n\treturn escaped[c] || c;\n}\n\n/** @param {string} str */\nfunction escape_unsafe_chars(str) {\n\treturn str.replace(unsafe_chars, escape_unsafe_char);\n}\n\n/** @param {string} key */\nfunction safe_key(key) {\n\treturn /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key)\n\t\t? key\n\t\t: escape_unsafe_chars(JSON.stringify(key));\n}\n\n/** @param {string} key */\nfunction safe_prop(key) {\n\treturn /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key)\n\t\t? `.${key}`\n\t\t: `[${escape_unsafe_chars(JSON.stringify(key))}]`;\n}\n\n/** @param {any} thing */\nfunction stringify_primitive(thing) {\n\tif (typeof thing === 'string') return stringify_string(thing);\n\tif (thing === void 0) return 'void 0';\n\tif (thing === 0 && 1 / thing < 0) return '-0';\n\tconst str = String(thing);\n\tif (typeof thing === 'number') return str.replace(/^(-)?0\\./, '$1.');\n\tif (typeof thing === 'bigint') return thing + 'n';\n\treturn str;\n}\n","export const UNDEFINED = -1;\nexport const HOLE = -2;\nexport const NAN = -3;\nexport const POSITIVE_INFINITY = -4;\nexport const NEGATIVE_INFINITY = -5;\nexport const NEGATIVE_ZERO = -6;\n","import {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\n\n/**\n * Revive a value serialized with `devalue.stringify`\n * @param {string} serialized\n */\nexport function parse(serialized) {\n\treturn unflatten(JSON.parse(serialized));\n}\n\n/**\n * Revive a value flattened with `devalue.flatten`\n * @param {number | any[]} parsed\n */\nexport function unflatten(parsed) {\n\tif (typeof parsed === 'number') return hydrate(parsed, true);\n\n\tif (!Array.isArray(parsed) || parsed.length === 0) {\n\t\tthrow new Error('Invalid input');\n\t}\n\n\tconst values = /** @type {any[]} */ (parsed);\n\n\tconst hydrated = Array(values.length);\n\n\t/** @param {number} index */\n\tfunction hydrate(index, standalone = false) {\n\t\tif (index === UNDEFINED) return undefined;\n\t\tif (index === NAN) return NaN;\n\t\tif (index === POSITIVE_INFINITY) return Infinity;\n\t\tif (index === NEGATIVE_INFINITY) return -Infinity;\n\t\tif (index === NEGATIVE_ZERO) return -0;\n\n\t\tif (standalone) throw new Error(`Invalid input`);\n\n\t\tif (index in hydrated) return hydrated[index];\n\n\t\tconst value = values[index];\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\thydrated[index] = value;\n\t\t} else if (Array.isArray(value)) {\n\t\t\tif (typeof value[0] === 'string') {\n\t\t\t\tconst type = value[0];\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'Date':\n\t\t\t\t\t\thydrated[index] = new Date(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Set':\n\t\t\t\t\t\tconst set = new Set();\n\t\t\t\t\t\thydrated[index] = set;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 1) {\n\t\t\t\t\t\t\tset.add(hydrate(value[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Map':\n\t\t\t\t\t\tconst map = new Map();\n\t\t\t\t\t\thydrated[index] = map;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tmap.set(hydrate(value[i]), hydrate(value[i + 1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RegExp':\n\t\t\t\t\t\thydrated[index] = new RegExp(value[1], value[2]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\thydrated[index] = Object(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BigInt':\n\t\t\t\t\t\thydrated[index] = BigInt(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'null':\n\t\t\t\t\t\tconst obj = Object.create(null);\n\t\t\t\t\t\thydrated[index] = obj;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tobj[value[i]] = hydrate(value[i + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = new Array(value.length);\n\t\t\t\thydrated[index] = array;\n\n\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\tconst n = value[i];\n\t\t\t\t\tif (n === HOLE) continue;\n\n\t\t\t\t\tarray[i] = hydrate(n);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst object = {};\n\t\t\thydrated[index] = object;\n\n\t\t\tfor (const key in value) {\n\t\t\t\tconst n = value[key];\n\t\t\t\tobject[key] = hydrate(n);\n\t\t\t}\n\t\t}\n\n\t\treturn hydrated[index];\n\t}\n\n\treturn hydrate(0);\n}\n","import { onMount, tick } from 'svelte';\nimport {\n\tmake_trackable,\n\tdecode_pathname,\n\tdecode_params,\n\tnormalize_path,\n\tadd_data_suffix\n} from '../../utils/url.js';\nimport {\n\tfind_anchor,\n\tget_base_uri,\n\tget_link_info,\n\tget_router_options,\n\tis_external_url,\n\tscroll_state\n} from './utils.js';\nimport {\n\tlock_fetch,\n\tunlock_fetch,\n\tinitial_fetch,\n\tsubsequent_fetch,\n\tnative_fetch\n} from './fetcher.js';\nimport { parse } from './parse.js';\n\nimport Root from '__GENERATED__/root.svelte';\nimport { nodes, server_loads, dictionary, matchers, hooks } from '__GENERATED__/client-manifest.js';\nimport { HttpError, Redirect } from '../control.js';\nimport { stores } from './singletons.js';\nimport { unwrap_promises } from '../../utils/promises.js';\nimport * as devalue from 'devalue';\nimport { INDEX_KEY, PRELOAD_PRIORITIES, SCROLL_KEY } from './constants.js';\n\nconst routes = parse(nodes, server_loads, dictionary, matchers);\n\nconst default_layout_loader = nodes[0];\nconst default_error_loader = nodes[1];\n\n// we import the root layout/error nodes eagerly, so that\n// connectivity errors after initialisation don't nuke the app\ndefault_layout_loader();\ndefault_error_loader();\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n// TODO remove for 1.0\n/** @type {Record<string, true>} */\nlet warned_about_attributes = {};\n\nfunction check_for_removed_attributes() {\n\tconst attrs = ['prefetch', 'noscroll', 'reload'];\n\tfor (const attr of attrs) {\n\t\tif (document.querySelector(`[sveltekit\\\\:${attr}]`)) {\n\t\t\tif (!warned_about_attributes[attr]) {\n\t\t\t\twarned_about_attributes[attr] = true;\n\t\t\t\tconsole.error(\n\t\t\t\t\t`The sveltekit:${attr} attribute has been replaced with data-sveltekit-${\n\t\t\t\t\t\tattr === 'prefetch' ? 'preload-data' : attr\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {{\n *   target: HTMLElement;\n *   base: string;\n * }} opts\n * @returns {import('./types').Client}\n */\nexport function create_client({ target, base }) {\n\t/** @type {Array<((url: URL) => boolean)>} */\n\tconst invalidated = [];\n\n\t/** @type {{id: string, promise: Promise<import('./types').NavigationResult>} | null} */\n\tlet load_cache = null;\n\n\tconst callbacks = {\n\t\t/** @type {Array<(navigation: import('types').BeforeNavigate) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(navigation: import('types').AfterNavigate) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\t/** this being true means we SSR'd */\n\tlet hydrated = false;\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet navigating = false;\n\tlet hash_navigating = false;\n\n\tlet force_invalidation = false;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/** @type {Promise<void> | null} */\n\tlet pending_invalidate;\n\n\tasync function invalidate() {\n\t\t// Accept all invalidations as they come, don't swallow any while another invalidation\n\t\t// is running because subsequent invalidations may make earlier ones outdated,\n\t\t// but batch multiple synchronous invalidations.\n\t\tpending_invalidate = pending_invalidate || Promise.resolve();\n\t\tawait pending_invalidate;\n\t\tpending_invalidate = null;\n\n\t\tconst url = new URL(location.href);\n\t\tconst intent = get_navigation_intent(url, true);\n\t\t// Clear preload, it might be affected by the invalidation.\n\t\t// Also solves an edge case where a preload is triggered, the navigation for it\n\t\t// was then triggered and is still running while the invalidation kicks in,\n\t\t// at which point the invalidation should take over and \"win\".\n\t\tload_cache = null;\n\t\tawait update(intent, url, []);\n\t}\n\n\t/**\n\t * @param {string | URL} url\n\t * @param {{ noScroll?: boolean; replaceState?: boolean; keepFocus?: boolean; state?: any; invalidateAll?: boolean }} opts\n\t * @param {string[]} redirect_chain\n\t * @param {{}} [nav_token]\n\t */\n\tasync function goto(\n\t\turl,\n\t\t{\n\t\t\tnoScroll = false,\n\t\t\treplaceState = false,\n\t\t\tkeepFocus = false,\n\t\t\tstate = {},\n\t\t\tinvalidateAll = false\n\t\t},\n\t\tredirect_chain,\n\t\tnav_token\n\t) {\n\t\tif (typeof url === 'string') {\n\t\t\turl = new URL(url, get_base_uri(document));\n\t\t}\n\n\t\treturn navigate({\n\t\t\turl,\n\t\t\tscroll: noScroll ? scroll_state() : null,\n\t\t\tkeepfocus: keepFocus,\n\t\t\tredirect_chain,\n\t\t\tdetails: {\n\t\t\t\tstate,\n\t\t\t\treplaceState\n\t\t\t},\n\t\t\tnav_token,\n\t\t\taccepted: () => {\n\t\t\t\tif (invalidateAll) {\n\t\t\t\t\tforce_invalidation = true;\n\t\t\t\t}\n\t\t\t},\n\t\t\tblocked: () => {},\n\t\t\ttype: 'goto'\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tasync function preload_data(url) {\n\t\tconst intent = get_navigation_intent(url, false);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error(`Attempted to preload a URL that does not belong to this app: ${url}`);\n\t\t}\n\n\t\tload_cache = {\n\t\t\tid: intent.id,\n\t\t\tpromise: load_route(intent).then((result) => {\n\t\t\t\tif (result.type === 'loaded' && result.state.error) {\n\t\t\t\t\t// Don't cache errors, because they might be transient\n\t\t\t\t\tload_cache = null;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t})\n\t\t};\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/** @param {...string} pathnames */\n\tasync function preload_code(...pathnames) {\n\t\tconst matching = routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)));\n\n\t\tconst promises = matching.map((r) => {\n\t\t\treturn Promise.all([...r.layouts, r.leaf].map((load) => load?.[1]()));\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {import('./types').NavigationIntent | undefined} intent\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {{}} [nav_token] To distinguish between different navigation events and determine the latest. Needed for example for redirects to keep the original token\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(intent, url, redirect_chain, opts, nav_token = {}, callback) {\n\t\ttoken = nav_token;\n\t\tlet navigation_result = intent && (await load_route(intent));\n\n\t\tif (!navigation_result) {\n\t\t\tnavigation_result = await server_fallback(\n\t\t\t\turl,\n\t\t\t\t{ id: null },\n\t\t\t\tawait handle_error(new Error(`Not found: ${url.pathname}`), {\n\t\t\t\t\turl,\n\t\t\t\t\tparams: {},\n\t\t\t\t\troute: { id: null }\n\t\t\t\t}),\n\t\t\t\t404\n\t\t\t);\n\t\t}\n\n\t\t// if this is an internal navigation intent, use the normalized\n\t\t// URL for the rest of the function\n\t\turl = intent?.url || url;\n\n\t\t// abort if user navigated during update\n\t\tif (token !== nav_token) return false;\n\n\t\tif (navigation_result.type === 'redirect') {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: await handle_error(new Error('Redirect loop'), {\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams: {},\n\t\t\t\t\t\troute: { id: null }\n\t\t\t\t\t}),\n\t\t\t\t\turl,\n\t\t\t\t\troute: { id: null }\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgoto(\n\t\t\t\t\tnew URL(navigation_result.location, url).href,\n\t\t\t\t\t{},\n\t\t\t\t\t[...redirect_chain, url.pathname],\n\t\t\t\t\tnav_token\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\t// reset invalidation only after a finished navigation. If there are redirects or\n\t\t// additional invalidations, they should get the same invalidation treatment\n\t\tinvalidated.length = 0;\n\t\tforce_invalidation = false;\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\t// reset preload synchronously after the history state has been set to avoid race conditions\n\t\tload_cache = null;\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\tconst post_update = pre_update();\n\t\t\troot.$set(navigation_result.props);\n\t\t\tpost_update();\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\t// reset focus first, so that manual focus management can override it\n\t\t\tif (!keepfocus) reset_focus();\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tawait tick();\n\t\t}\n\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationFinished} result */\n\tfunction initialize(result) {\n\t\tif (__SVELTEKIT_DEV__ && document.querySelector('vite-error-overlay')) return;\n\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\tconst post_update = pre_update();\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\t\tpost_update();\n\n\t\t/** @type {import('types').AfterNavigate} */\n\t\tconst navigation = {\n\t\t\tfrom: null,\n\t\t\tto: add_url_properties('to', {\n\t\t\t\tparams: current.params,\n\t\t\t\troute: { id: current.route?.id ?? null },\n\t\t\t\turl: new URL(location.href)\n\t\t\t}),\n\t\t\twillUnload: false,\n\t\t\ttype: 'enter'\n\t\t};\n\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: App.Error | null;\n\t *   route: import('types').CSRRoute | null;\n\t *   form?: Record<string, any> | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\troute,\n\t\tform\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\n\t\t/** @type {import('types').TrailingSlash} */\n\t\tlet slash = 'never';\n\t\tfor (const node of branch) {\n\t\t\tif (node?.slash !== undefined) slash = node.slash;\n\t\t}\n\t\turl.pathname = normalize_path(url.pathname, slash);\n\t\turl.search = url.search; // turn `/?` into `/`\n\n\t\t/** @type {import('./types').NavigationFinished} */\n\t\tconst result = {\n\t\t\ttype: 'loaded',\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\troute\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((branch_node) => branch_node.node.component)\n\t\t\t}\n\t\t};\n\n\t\tif (form !== undefined) {\n\t\t\tresult.props.form = form;\n\t\t}\n\n\t\tlet data = {};\n\t\tlet data_changed = !page;\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst node = filtered[i];\n\t\t\tdata = { ...data, ...node.data };\n\n\t\t\t// Only set props if the node actually updated. This prevents needless rerenders.\n\t\t\tif (data_changed || !current.branch.some((previous) => previous === node)) {\n\t\t\t\tresult.props[`data_${i}`] = data;\n\t\t\t\tdata_changed = data_changed || Object.keys(node.data ?? {}).length > 0;\n\t\t\t}\n\t\t}\n\t\tif (!data_changed) {\n\t\t\t// If nothing was added, and the object entries are the same length, this means\n\t\t\t// that nothing was removed either and therefore the data is the same as the previous one.\n\t\t\t// This would be more readable with a separate boolean but that would cost us some bytes.\n\t\t\tdata_changed = Object.keys(page.data).length !== Object.keys(data).length;\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url ||\n\t\t\turl.href !== current.url.href ||\n\t\t\tcurrent.error !== error ||\n\t\t\tform !== undefined ||\n\t\t\tdata_changed;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = {\n\t\t\t\terror,\n\t\t\t\tparams,\n\t\t\t\troute,\n\t\t\t\tstatus,\n\t\t\t\turl: new URL(url),\n\t\t\t\tform,\n\t\t\t\t// The whole page store is updated, but this way the object reference stays the same\n\t\t\t\tdata: data_changed ? data : page.data\n\t\t\t};\n\n\t\t\t// TODO remove this for 1.0\n\t\t\tObject.defineProperty(result.props.page, 'routeId', {\n\t\t\t\tget() {\n\t\t\t\t\tthrow new Error('$page.routeId has been replaced by $page.route.id');\n\t\t\t\t},\n\t\t\t\tenumerable: false\n\t\t\t});\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Call the load function of the given node, if it exists.\n\t * If `server_data` is passed, this is treated as the initial run and the page endpoint is not requested.\n\t *\n\t * @param {{\n\t *   loader: import('types').CSRPageNodeLoader;\n\t * \t parent: () => Promise<Record<string, any>>;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   route: { id: string | null };\n\t * \t server_data_node: import('./types').DataNode | null;\n\t * }} options\n\t * @returns {Promise<import('./types').BranchNode>}\n\t */\n\tasync function load_node({ loader, parent, url, params, route, server_data_node }) {\n\t\t/** @type {Record<string, any> | null} */\n\t\tlet data = null;\n\n\t\t/** @type {import('types').Uses} */\n\t\tconst uses = {\n\t\t\tdependencies: new Set(),\n\t\t\tparams: new Set(),\n\t\t\tparent: false,\n\t\t\troute: false,\n\t\t\turl: false\n\t\t};\n\n\t\tconst node = await loader();\n\n\t\tif (node.shared?.load) {\n\t\t\t/** @param {string[]} deps */\n\t\t\tfunction depends(...deps) {\n\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\tconst { href } = new URL(dep, url);\n\t\t\t\t\tuses.dependencies.add(href);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\troute: {\n\t\t\t\t\tget id() {\n\t\t\t\t\t\tuses.route = true;\n\t\t\t\t\t\treturn route.id;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: new Proxy(params, {\n\t\t\t\t\tget: (target, key) => {\n\t\t\t\t\t\tuses.params.add(/** @type {string} */ (key));\n\t\t\t\t\t\treturn target[/** @type {string} */ (key)];\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tdata: server_data_node?.data ?? null,\n\t\t\t\turl: make_trackable(url, () => {\n\t\t\t\t\tuses.url = true;\n\t\t\t\t}),\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (resource instanceof Request) {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst resolved = new URL(requested, url).href;\n\t\t\t\t\tdepends(resolved);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be resolved\n\t\t\t\t\treturn started\n\t\t\t\t\t\t? subsequent_fetch(requested, resolved, init)\n\t\t\t\t\t\t: initial_fetch(requested, init);\n\t\t\t\t},\n\t\t\t\tsetHeaders: () => {}, // noop\n\t\t\t\tdepends,\n\t\t\t\tparent() {\n\t\t\t\t\tuses.parent = true;\n\t\t\t\t\treturn parent();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// TODO remove this for 1.0\n\t\t\tObject.defineProperties(load_input, {\n\t\t\t\tprops: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'@migration task: Replace `props` with `data` stuff https://github.com/sveltejs/kit/discussions/5774#discussioncomment-3292693'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t},\n\t\t\t\tsession: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'session is no longer available. See https://github.com/sveltejs/kit/discussions/5883'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t},\n\t\t\t\tstuff: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'@migration task: Remove stuff https://github.com/sveltejs/kit/discussions/5774#discussioncomment-3292693'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t},\n\t\t\t\trouteId: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error('routeId has been replaced by route.id');\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tdata = (await node.shared.load.call(null, load_input)) ?? null;\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdata = (await node.shared.load.call(null, load_input)) ?? null;\n\t\t\t}\n\t\t\tdata = data ? await unwrap_promises(data) : null;\n\t\t}\n\n\t\treturn {\n\t\t\tnode,\n\t\t\tloader,\n\t\t\tserver: server_data_node,\n\t\t\tshared: node.shared?.load ? { type: 'data', data, uses } : null,\n\t\t\tdata: data ?? server_data_node?.data ?? null,\n\t\t\tslash: node.shared?.trailingSlash ?? server_data_node?.slash\n\t\t};\n\t}\n\n\t/**\n\t * @param {boolean} parent_changed\n\t * @param {boolean} route_changed\n\t * @param {boolean} url_changed\n\t * @param {import('types').Uses | undefined} uses\n\t * @param {Record<string, string>} params\n\t */\n\tfunction has_changed(parent_changed, route_changed, url_changed, uses, params) {\n\t\tif (force_invalidation) return true;\n\n\t\tif (!uses) return false;\n\n\t\tif (uses.parent && parent_changed) return true;\n\t\tif (uses.route && route_changed) return true;\n\t\tif (uses.url && url_changed) return true;\n\n\t\tfor (const param of uses.params) {\n\t\t\tif (params[param] !== current.params[param]) return true;\n\t\t}\n\n\t\tfor (const href of uses.dependencies) {\n\t\t\tif (invalidated.some((fn) => fn(new URL(href)))) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {import('types').ServerDataNode | import('types').ServerDataSkippedNode | null} node\n\t * @param {import('./types').DataNode | null} [previous]\n\t * @returns {import('./types').DataNode | null}\n\t */\n\tfunction create_data_node(node, previous) {\n\t\tif (node?.type === 'data') {\n\t\t\treturn {\n\t\t\t\ttype: 'data',\n\t\t\t\tdata: node.data,\n\t\t\t\tuses: {\n\t\t\t\t\tdependencies: new Set(node.uses.dependencies ?? []),\n\t\t\t\t\tparams: new Set(node.uses.params ?? []),\n\t\t\t\t\tparent: !!node.uses.parent,\n\t\t\t\t\troute: !!node.uses.route,\n\t\t\t\t\turl: !!node.uses.url\n\t\t\t\t},\n\t\t\t\tslash: node.slash\n\t\t\t};\n\t\t} else if (node?.type === 'skip') {\n\t\t\treturn previous ?? null;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync function load_route({ id, invalidating, url, params, route }) {\n\t\tif (load_cache?.id === id) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tconst { errors, layouts, leaf } = route;\n\n\t\tconst loaders = [...layouts, leaf];\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\terrors.forEach((loader) => loader?.().catch(() => {}));\n\t\tloaders.forEach((loader) => loader?.[1]().catch(() => {}));\n\n\t\t/** @type {import('types').ServerData | null} */\n\t\tlet server_data = null;\n\n\t\tconst url_changed = current.url ? id !== current.url.pathname + current.url.search : false;\n\t\tconst route_changed = current.route ? id !== current.route.id : false;\n\n\t\tconst invalid_server_nodes = loaders.reduce((acc, loader, i) => {\n\t\t\tconst previous = current.branch[i];\n\n\t\t\tconst invalid =\n\t\t\t\t!!loader?.[0] &&\n\t\t\t\t(previous?.loader !== loader[1] ||\n\t\t\t\t\thas_changed(\n\t\t\t\t\t\tacc.some(Boolean),\n\t\t\t\t\t\troute_changed,\n\t\t\t\t\t\turl_changed,\n\t\t\t\t\t\tprevious.server?.uses,\n\t\t\t\t\t\tparams\n\t\t\t\t\t));\n\n\t\t\tacc.push(invalid);\n\t\t\treturn acc;\n\t\t}, /** @type {boolean[]} */ ([]));\n\n\t\tif (invalid_server_nodes.some(Boolean)) {\n\t\t\ttry {\n\t\t\t\tserver_data = await load_data(url, invalid_server_nodes);\n\t\t\t} catch (error) {\n\t\t\t\treturn load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: await handle_error(error, { url, params, route: { id: route.id } }),\n\t\t\t\t\turl,\n\t\t\t\t\troute\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (server_data.type === 'redirect') {\n\t\t\t\treturn server_data;\n\t\t\t}\n\t\t}\n\n\t\tconst server_data_nodes = server_data?.nodes;\n\n\t\tlet parent_changed = false;\n\n\t\tconst branch_promises = loaders.map(async (loader, i) => {\n\t\t\tif (!loader) return;\n\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tconst previous = current.branch[i];\n\n\t\t\tconst server_data_node = server_data_nodes?.[i];\n\n\t\t\t// re-use data from previous load if it's still valid\n\t\t\tconst valid =\n\t\t\t\t(!server_data_node || server_data_node.type === 'skip') &&\n\t\t\t\tloader[1] === previous?.loader &&\n\t\t\t\t!has_changed(parent_changed, route_changed, url_changed, previous.shared?.uses, params);\n\t\t\tif (valid) return previous;\n\n\t\t\tparent_changed = true;\n\n\t\t\tif (server_data_node?.type === 'error') {\n\t\t\t\t// rethrow and catch below\n\t\t\t\tthrow server_data_node;\n\t\t\t}\n\n\t\t\treturn load_node({\n\t\t\t\tloader: loader[1],\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\troute,\n\t\t\t\tparent: async () => {\n\t\t\t\t\tconst data = {};\n\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\tObject.assign(data, (await branch_promises[j])?.data);\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\t},\n\t\t\t\tserver_data_node: create_data_node(\n\t\t\t\t\t// server_data_node is undefined if it wasn't reloaded from the server;\n\t\t\t\t\t// and if current loader uses server data, we want to reuse previous data.\n\t\t\t\t\tserver_data_node === undefined && loader[0] ? { type: 'skip' } : server_data_node ?? null,\n\t\t\t\t\tprevious?.server\n\t\t\t\t)\n\t\t\t});\n\t\t});\n\n\t\t// if we don't do this, rejections will be unhandled\n\t\tfor (const p of branch_promises) p.catch(() => {});\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tconst branch = [];\n\n\t\tfor (let i = 0; i < loaders.length; i += 1) {\n\t\t\tif (loaders[i]) {\n\t\t\t\ttry {\n\t\t\t\t\tbranch.push(await branch_promises[i]);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err instanceof Redirect) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'redirect',\n\t\t\t\t\t\t\tlocation: err.location\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tlet status = 500;\n\t\t\t\t\t/** @type {App.Error} */\n\t\t\t\t\tlet error;\n\n\t\t\t\t\tif (server_data_nodes?.includes(/** @type {import('types').ServerErrorNode} */ (err))) {\n\t\t\t\t\t\t// this is the server error rethrown above, reconstruct but don't invoke\n\t\t\t\t\t\t// the client error handler; it should've already been handled on the server\n\t\t\t\t\t\tstatus = /** @type {import('types').ServerErrorNode} */ (err).status ?? status;\n\t\t\t\t\t\terror = /** @type {import('types').ServerErrorNode} */ (err).error;\n\t\t\t\t\t} else if (err instanceof HttpError) {\n\t\t\t\t\t\tstatus = err.status;\n\t\t\t\t\t\terror = err.body;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror = await handle_error(err, { params, url, route: { id: route.id } });\n\t\t\t\t\t}\n\n\t\t\t\t\tconst error_load = await load_nearest_error_page(i, branch, errors);\n\t\t\t\t\tif (error_load) {\n\t\t\t\t\t\treturn await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tbranch: branch.slice(0, error_load.idx).concat(error_load.node),\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\troute\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if we get here, it's because the root `load` function failed,\n\t\t\t\t\t\t// and we need to fall back to the server\n\t\t\t\t\t\treturn await server_fallback(url, { id: route.id }, error, status);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// push an empty slot so we can rewind past gaps to the\n\t\t\t\t// layout that corresponds with an +error.svelte page\n\t\t\t\tbranch.push(undefined);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch,\n\t\t\tstatus: 200,\n\t\t\terror: null,\n\t\t\troute,\n\t\t\t// Reset `form` on navigation, but not invalidation\n\t\t\tform: invalidating ? undefined : null\n\t\t});\n\t}\n\n\t/**\n\t * @param {number} i Start index to backtrack from\n\t * @param {Array<import('./types').BranchNode | undefined>} branch Branch to backtrack\n\t * @param {Array<import('types').CSRPageNodeLoader | undefined>} errors All error pages for this branch\n\t * @returns {Promise<{idx: number; node: import('./types').BranchNode} | undefined>}\n\t */\n\tasync function load_nearest_error_page(i, branch, errors) {\n\t\twhile (i--) {\n\t\t\tif (errors[i]) {\n\t\t\t\tlet j = i;\n\t\t\t\twhile (!branch[j]) j -= 1;\n\t\t\t\ttry {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tidx: j + 1,\n\t\t\t\t\t\tnode: {\n\t\t\t\t\t\t\tnode: await /** @type {import('types').CSRPageNodeLoader } */ (errors[i])(),\n\t\t\t\t\t\t\tloader: /** @type {import('types').CSRPageNodeLoader } */ (errors[i]),\n\t\t\t\t\t\t\tdata: {},\n\t\t\t\t\t\t\tserver: null,\n\t\t\t\t\t\t\tshared: null\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: App.Error;\n\t *   url: URL;\n\t *   route: { id: string | null }\n\t * }} opts\n\t * @returns {Promise<import('./types').NavigationFinished>}\n\t */\n\tasync function load_root_error_page({ status, error, url, route }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst node = await default_layout_loader();\n\n\t\t/** @type {import('types').ServerDataNode | null} */\n\t\tlet server_data_node = null;\n\n\t\tif (node.server) {\n\t\t\t// TODO post-https://github.com/sveltejs/kit/discussions/6124 we can use\n\t\t\t// existing root layout data\n\t\t\ttry {\n\t\t\t\tconst server_data = await load_data(url, [true]);\n\n\t\t\t\tif (\n\t\t\t\t\tserver_data.type !== 'data' ||\n\t\t\t\t\t(server_data.nodes[0] && server_data.nodes[0].type !== 'data')\n\t\t\t\t) {\n\t\t\t\t\tthrow 0;\n\t\t\t\t}\n\n\t\t\t\tserver_data_node = server_data.nodes[0] ?? null;\n\t\t\t} catch {\n\t\t\t\t// at this point we have no choice but to fall back to the server, if it wouldn't\n\t\t\t\t// bring us right back here, turning this into an endless loop\n\t\t\t\tif (url.origin !== location.origin || url.pathname !== location.pathname || hydrated) {\n\t\t\t\t\tawait native_navigation(url);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst root_layout = await load_node({\n\t\t\tloader: default_layout_loader,\n\t\t\turl,\n\t\t\tparams,\n\t\t\troute,\n\t\t\tparent: () => Promise.resolve({}),\n\t\t\tserver_data_node: create_data_node(server_data_node)\n\t\t});\n\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst root_error = {\n\t\t\tnode: await default_error_loader(),\n\t\t\tloader: default_error_loader,\n\t\t\tshared: null,\n\t\t\tserver: null,\n\t\t\tdata: null\n\t\t};\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\troute: null\n\t\t});\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @param {boolean} invalidating\n\t */\n\tfunction get_navigation_intent(url, invalidating) {\n\t\tif (is_external_url(url, base)) return;\n\n\t\tconst path = decode_pathname(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\tconst id = url.pathname + url.search;\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = { id, invalidating, route, params: decode_params(params), url };\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   type: import('types').NavigationType;\n\t *   intent?: import('./types').NavigationIntent;\n\t *   delta?: number;\n\t * }} opts\n\t */\n\tfunction before_navigate({ url, type, intent, delta }) {\n\t\tlet should_block = false;\n\n\t\t/** @type {import('types').Navigation} */\n\t\tconst navigation = {\n\t\t\tfrom: add_url_properties('from', {\n\t\t\t\tparams: current.params,\n\t\t\t\troute: { id: current.route?.id ?? null },\n\t\t\t\turl: current.url\n\t\t\t}),\n\t\t\tto: add_url_properties('to', {\n\t\t\t\tparams: intent?.params ?? null,\n\t\t\t\troute: { id: intent?.route?.id ?? null },\n\t\t\t\turl\n\t\t\t}),\n\t\t\twillUnload: !intent,\n\t\t\ttype\n\t\t};\n\n\t\tif (delta !== undefined) {\n\t\t\tnavigation.delta = delta;\n\t\t}\n\n\t\tconst cancellable = {\n\t\t\t...navigation,\n\t\t\tcancel: () => {\n\t\t\t\tshould_block = true;\n\t\t\t}\n\t\t};\n\n\t\tif (!navigating) {\n\t\t\t// Don't run the event during redirects\n\t\t\tcallbacks.before_navigate.forEach((fn) => fn(cancellable));\n\t\t}\n\n\t\treturn should_block ? null : navigation;\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   type: import('types').NavigationType;\n\t *   delta?: number;\n\t *   nav_token?: {};\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({\n\t\turl,\n\t\tscroll,\n\t\tkeepfocus,\n\t\tredirect_chain,\n\t\tdetails,\n\t\ttype,\n\t\tdelta,\n\t\tnav_token,\n\t\taccepted,\n\t\tblocked\n\t}) {\n\t\tconst intent = get_navigation_intent(url, false);\n\t\tconst navigation = before_navigate({ url, type, delta, intent });\n\n\t\tif (!navigation) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tnavigating = true;\n\n\t\tif (started) {\n\t\t\tstores.navigating.set(navigation);\n\t\t}\n\n\t\tawait update(\n\t\t\tintent,\n\t\t\turl,\n\t\t\tredirect_chain,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\tnav_token,\n\t\t\t() => {\n\t\t\t\tnavigating = false;\n\t\t\t\tcallbacks.after_navigate.forEach((fn) =>\n\t\t\t\t\tfn(/** @type {import('types').AfterNavigate} */ (navigation))\n\t\t\t\t);\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Does a full page reload if it wouldn't result in an endless loop in the SPA case\n\t * @param {URL} url\n\t * @param {{ id: string | null }} route\n\t * @param {App.Error} error\n\t * @param {number} status\n\t * @returns {Promise<import('./types').NavigationFinished>}\n\t */\n\tasync function server_fallback(url, route, error, status) {\n\t\tif (url.origin === location.origin && url.pathname === location.pathname && !hydrated) {\n\t\t\t// We would reload the same page we're currently on, which isn't hydrated,\n\t\t\t// which means no SSR, which means we would end up in an endless loop\n\t\t\treturn await load_root_error_page({\n\t\t\t\tstatus,\n\t\t\t\terror,\n\t\t\t\turl,\n\t\t\t\troute\n\t\t\t});\n\t\t}\n\t\treturn await native_navigation(url);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\tfunction setup_preload() {\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet mousemove_timeout;\n\n\t\ttarget.addEventListener('mousemove', (event) => {\n\t\t\tconst target = /** @type {Element} */ (event.target);\n\n\t\t\tclearTimeout(mousemove_timeout);\n\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\tpreload(target, 2);\n\t\t\t}, 20);\n\t\t});\n\n\t\t/** @param {Event} event */\n\t\tfunction tap(event) {\n\t\t\tpreload(/** @type {Element} */ (event.composedPath()[0]), 1);\n\t\t}\n\n\t\ttarget.addEventListener('mousedown', tap);\n\t\ttarget.addEventListener('touchstart', tap, { passive: true });\n\n\t\tconst observer = new IntersectionObserver(\n\t\t\t(entries) => {\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\tpreload_code(new URL(/** @type {HTMLAnchorElement} */ (entry.target).href).pathname);\n\t\t\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ threshold: 0 }\n\t\t);\n\n\t\t/**\n\t\t * @param {Element} element\n\t\t * @param {number} priority\n\t\t */\n\t\tfunction preload(element, priority) {\n\t\t\tconst a = find_anchor(element, target);\n\t\t\tif (!a) return;\n\n\t\t\tconst { url, external } = get_link_info(a, base);\n\t\t\tif (external) return;\n\n\t\t\tconst options = get_router_options(a);\n\n\t\t\tif (!options.reload) {\n\t\t\t\tif (priority <= options.preload_data) {\n\t\t\t\t\tpreload_data(/** @type {URL} */ (url));\n\t\t\t\t} else if (priority <= options.preload_code) {\n\t\t\t\t\tpreload_code(/** @type {URL} */ (url).pathname);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction after_navigate() {\n\t\t\tobserver.disconnect();\n\n\t\t\tfor (const a of target.querySelectorAll('a')) {\n\t\t\t\tconst { url, external } = get_link_info(a, base);\n\t\t\t\tif (external) continue;\n\n\t\t\t\tconst options = get_router_options(a);\n\t\t\t\tif (options.reload) continue;\n\n\t\t\t\tif (options.preload_code === PRELOAD_PRIORITIES.viewport) {\n\t\t\t\t\tobserver.observe(a);\n\t\t\t\t}\n\n\t\t\t\tif (options.preload_code === PRELOAD_PRIORITIES.eager) {\n\t\t\t\t\tpreload_code(/** @type {URL} */ (url).pathname);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcallbacks.after_navigate.push(after_navigate);\n\t\tafter_navigate();\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => {\n\t\t\t// TODO remove for 1.0\n\t\t\tif ('keepfocus' in opts && !('keepFocus' in opts)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'`keepfocus` has been renamed to `keepFocus` (note the difference in casing)'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ('noscroll' in opts && !('noScroll' in opts)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'`noscroll` has been renamed to `noScroll` (note the difference in casing)'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn goto(href, opts, []);\n\t\t},\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (resource === undefined) {\n\t\t\t\t// TODO remove for 1.0\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'`invalidate()` (with no arguments) has been replaced by `invalidateAll()`'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((url) => url.href === href);\n\t\t\t}\n\n\t\t\treturn invalidate();\n\t\t},\n\n\t\tinvalidateAll: () => {\n\t\t\tforce_invalidation = true;\n\t\t\treturn invalidate();\n\t\t},\n\n\t\tpreload_data: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait preload_data(url);\n\t\t},\n\n\t\tpreload_code,\n\n\t\tapply_action: async (result) => {\n\t\t\tif (result.type === 'error') {\n\t\t\t\tconst url = new URL(location.href);\n\n\t\t\t\tconst { branch, route } = current;\n\t\t\t\tif (!route) return;\n\n\t\t\t\tconst error_load = await load_nearest_error_page(\n\t\t\t\t\tcurrent.branch.length,\n\t\t\t\t\tbranch,\n\t\t\t\t\troute.errors\n\t\t\t\t);\n\t\t\t\tif (error_load) {\n\t\t\t\t\tconst navigation_result = await get_navigation_result_from_branch({\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams: current.params,\n\t\t\t\t\t\tbranch: branch.slice(0, error_load.idx).concat(error_load.node),\n\t\t\t\t\t\tstatus: 500, // TODO might not be 500?\n\t\t\t\t\t\terror: result.error,\n\t\t\t\t\t\troute\n\t\t\t\t\t});\n\n\t\t\t\t\tcurrent = navigation_result.state;\n\n\t\t\t\t\tconst post_update = pre_update();\n\t\t\t\t\troot.$set(navigation_result.props);\n\t\t\t\t\tpost_update();\n\n\t\t\t\t\ttick().then(reset_focus);\n\t\t\t\t}\n\t\t\t} else if (result.type === 'redirect') {\n\t\t\t\tgoto(result.location, { invalidateAll: true }, []);\n\t\t\t} else {\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst props = {\n\t\t\t\t\tform: result.data,\n\t\t\t\t\tpage: { ...page, form: result.data, status: result.status }\n\t\t\t\t};\n\t\t\t\tconst post_update = pre_update();\n\t\t\t\troot.$set(props);\n\t\t\t\tpost_update();\n\n\t\t\t\tif (result.type === 'success') {\n\t\t\t\t\ttick().then(reset_focus);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tif (!navigating) {\n\t\t\t\t\t// If we're navigating, beforeNavigate was already called. If we end up in here during navigation,\n\t\t\t\t\t// it's due to an external or full-page-reload link, for which we don't want to call the hook again.\n\t\t\t\t\t/** @type {import('types').BeforeNavigate} */\n\t\t\t\t\tconst navigation = {\n\t\t\t\t\t\tfrom: add_url_properties('from', {\n\t\t\t\t\t\t\tparams: current.params,\n\t\t\t\t\t\t\troute: { id: current.route?.id ?? null },\n\t\t\t\t\t\t\turl: current.url\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tto: null,\n\t\t\t\t\t\twillUnload: true,\n\t\t\t\t\t\ttype: 'leave',\n\t\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t\t};\n\n\t\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\t\t\t\t}\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// @ts-expect-error this isn't supported everywhere yet\n\t\t\tif (!navigator.connection?.saveData) {\n\t\t\t\tsetup_preload();\n\t\t\t}\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\ttarget.addEventListener('click', (event) => {\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(/** @type {Element} */ (event.composedPath()[0]), target);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tconst { url, external, has } = get_link_info(a, base);\n\t\t\t\tconst options = get_router_options(a);\n\t\t\t\tif (!url) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\n\t\t\t\t// Ignore URL protocols that differ to the current one and are not http(s) (e.g. `mailto:`, `tel:`, `myapp:`, etc.)\n\t\t\t\t// This may be wrong when the protocol is x: and the link goes to y:.. which should be treated as an external\n\t\t\t\t// navigation, but it's not clear how to handle that case and it's not likely to come up in practice.\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See:\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/4045\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/5725\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/6496\n\t\t\t\tif (\n\t\t\t\t\t!is_svg_a_element &&\n\t\t\t\t\turl.protocol !== location.protocol &&\n\t\t\t\t\t!(url.protocol === 'https:' || url.protocol === 'http:')\n\t\t\t\t)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (has.download) return;\n\n\t\t\t\t// Ignore the following but fire beforeNavigate\n\t\t\t\tif (external || options.reload) {\n\t\t\t\t\tconst navigation = before_navigate({ url, type: 'link' });\n\t\t\t\t\tif (!navigation) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tnavigating = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [nonhash, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && nonhash === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\t// TODO why not update history here directly?\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tcurrent.url = url;\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: options.noscroll ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault(),\n\t\t\t\t\ttype: 'link'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\ttarget.addEventListener('submit', (event) => {\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst form = /** @type {HTMLFormElement} */ (\n\t\t\t\t\tHTMLFormElement.prototype.cloneNode.call(event.target)\n\t\t\t\t);\n\n\t\t\t\tconst submitter = /** @type {HTMLButtonElement | HTMLInputElement | null} */ (\n\t\t\t\t\tevent.submitter\n\t\t\t\t);\n\n\t\t\t\tconst method = submitter?.formMethod || form.method;\n\n\t\t\t\tif (method !== 'get') return;\n\n\t\t\t\tconst url = new URL(\n\t\t\t\t\t(event.submitter?.hasAttribute('formaction') && submitter?.formAction) || form.action\n\t\t\t\t);\n\n\t\t\t\tif (is_external_url(url, base)) return;\n\n\t\t\t\tconst { noscroll, reload } = get_router_options(\n\t\t\t\t\t/** @type {HTMLFormElement} */ (event.target)\n\t\t\t\t);\n\t\t\t\tif (reload) return;\n\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\n\t\t\t\t// @ts-expect-error `URLSearchParams(fd)` is kosher, but typescript doesn't know that\n\t\t\t\turl.search = new URLSearchParams(new FormData(event.target)).toString();\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: false\n\t\t\t\t\t},\n\t\t\t\t\tnav_token: {},\n\t\t\t\t\taccepted: () => {},\n\t\t\t\t\tblocked: () => {},\n\t\t\t\t\ttype: 'form'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state?.[INDEX_KEY]) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tconst delta = event.state[INDEX_KEY] - current_history_index;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\thistory.go(-delta);\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'popstate',\n\t\t\t\t\t\tdelta\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// fix link[rel=icon], because browsers will occasionally try to load relative\n\t\t\t// URLs after a pushState/replaceState, resulting in a 404 — see\n\t\t\t// https://github.com/sveltejs/kit/issues/3748#issuecomment-1125980897\n\t\t\tfor (const link of document.querySelectorAll('link')) {\n\t\t\t\tif (link.rel === 'icon') link.href = link.href;\n\t\t\t}\n\n\t\t\taddEventListener('pageshow', (event) => {\n\t\t\t\t// If the user navigates to another site and then uses the back button and\n\t\t\t\t// bfcache hits, we need to set navigating to null, the site doesn't know\n\t\t\t\t// the navigation away from it was successful.\n\t\t\t\t// Info about bfcache here: https://web.dev/bfcache\n\t\t\t\tif (event.persisted) {\n\t\t\t\t\tstores.navigating.set(null);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({ status, error, node_ids, params, route, data: server_data_nodes, form }) => {\n\t\t\thydrated = true;\n\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {import('./types').NavigationFinished | undefined} */\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tconst branch_promises = node_ids.map(async (n, i) => {\n\t\t\t\t\tconst server_data_node = server_data_nodes[i];\n\n\t\t\t\t\treturn load_node({\n\t\t\t\t\t\tloader: nodes[n],\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\troute,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tObject.assign(data, (await branch_promises[j]).data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tserver_data_node: create_data_node(server_data_node)\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tresult = await get_navigation_result_from_branch({\n\t\t\t\t\turl,\n\t\t\t\t\tparams,\n\t\t\t\t\tbranch: await Promise.all(branch_promises),\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\tform,\n\t\t\t\t\troute: routes.find(({ id }) => id === route.id) ?? null\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof Redirect) {\n\t\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t\t// a redirect but only in the browser\n\t\t\t\t\tawait native_navigation(new URL(error.location, location.href));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: error instanceof HttpError ? error.status : 500,\n\t\t\t\t\terror: await handle_error(error, { url, params, route }),\n\t\t\t\t\turl,\n\t\t\t\t\troute\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\n/**\n * @param {URL} url\n * @param {boolean[]} invalid\n * @returns {Promise<import('types').ServerData>}\n */\nasync function load_data(url, invalid) {\n\tconst data_url = new URL(url);\n\tdata_url.pathname = add_data_suffix(url.pathname);\n\tif (__SVELTEKIT_DEV__ && url.searchParams.has('x-sveltekit-invalidated')) {\n\t\tthrow new Error('Cannot used reserved query parameter \"x-sveltekit-invalidated\"');\n\t}\n\tdata_url.searchParams.append(\n\t\t'x-sveltekit-invalidated',\n\t\tinvalid.map((x) => (x ? '1' : '')).join('_')\n\t);\n\n\tconst res = await native_fetch(data_url.href);\n\tconst data = await res.json();\n\n\tif (!res.ok) {\n\t\t// error message is a JSON-stringified string which devalue can't handle at the top level\n\t\tthrow new Error(data);\n\t}\n\n\t// revive devalue-flattened data\n\tdata.nodes?.forEach((/** @type {any} */ node) => {\n\t\tif (node?.type === 'data') {\n\t\t\tnode.data = devalue.unflatten(node.data);\n\t\t\tnode.uses = {\n\t\t\t\tdependencies: new Set(node.uses.dependencies ?? []),\n\t\t\t\tparams: new Set(node.uses.params ?? []),\n\t\t\t\tparent: !!node.uses.parent,\n\t\t\t\troute: !!node.uses.route,\n\t\t\t\turl: !!node.uses.url\n\t\t\t};\n\t\t}\n\t});\n\n\treturn data;\n}\n\n/**\n * @param {unknown} error\n * @param {import('types').NavigationEvent} event\n * @returns {import('../../../types/private.js').MaybePromise<App.Error>}\n */\nfunction handle_error(error, event) {\n\tif (error instanceof HttpError) {\n\t\treturn error.body;\n\t}\n\treturn (\n\t\thooks.handleError({ error, event }) ??\n\t\t/** @type {any} */ ({ message: event.route.id != null ? 'Internal Error' : 'Not Found' })\n\t);\n}\n\n// TODO remove for 1.0\nconst properties = [\n\t'hash',\n\t'href',\n\t'host',\n\t'hostname',\n\t'origin',\n\t'pathname',\n\t'port',\n\t'protocol',\n\t'search',\n\t'searchParams',\n\t'toString',\n\t'toJSON'\n];\n\n/**\n * @param {'from' | 'to'} type\n * @param {import('types').NavigationTarget} target\n */\nfunction add_url_properties(type, target) {\n\tfor (const prop of properties) {\n\t\tObject.defineProperty(target, prop, {\n\t\t\tget() {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The navigation shape changed - ${type}.${prop} should now be ${type}.url.${prop}`\n\t\t\t\t);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(target, 'routeId', {\n\t\tget() {\n\t\t\tthrow new Error(\n\t\t\t\t`The navigation shape changed - ${type}.routeId should now be ${type}.route.id`\n\t\t\t);\n\t\t},\n\t\tenumerable: false\n\t});\n\n\treturn target;\n}\n\nfunction pre_update() {\n\tif (__SVELTEKIT_DEV__) {\n\t\treturn () => {\n\t\t\tcheck_for_removed_attributes();\n\t\t};\n\t}\n\n\treturn () => {};\n}\n\nfunction reset_focus() {\n\tconst autofocus = document.querySelector('[autofocus]');\n\tif (autofocus) {\n\t\t// @ts-ignore\n\t\tautofocus.focus();\n\t} else {\n\t\t// Reset page selection and focus\n\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\tconst root = document.body;\n\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\troot.tabIndex = -1;\n\t\troot.focus({ preventScroll: true });\n\n\t\tsetTimeout(() => {\n\t\t\tgetSelection()?.removeAllRanges();\n\t\t});\n\n\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\tif (tabindex !== null) {\n\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t} else {\n\t\t\troot.removeAttribute('tabindex');\n\t\t}\n\t}\n}\n\nif (__SVELTEKIT_DEV__) {\n\t// Nasty hack to silence harmless warnings the user can do nothing about\n\tconst console_warn = console.warn;\n\tconsole.warn = function warn(...args) {\n\t\tif (\n\t\t\targs.length === 1 &&\n\t\t\t/<(Layout|Page)(_[\\w$]+)?> was created (with unknown|without expected) prop '(data|form)'/.test(\n\t\t\t\targs[0]\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconsole_warn(...args);\n\t};\n}\n","import { create_client } from './client.js';\nimport { init } from './singletons.js';\nimport { set_paths } from '../paths.js';\nimport { set_public_env } from '../env-public.js';\nimport { set_version } from '../env.js';\n\n/**\n * @param {{\n *   env: Record<string, string>;\n *   hydrate: Parameters<import('./types').Client['_hydrate']>[0];\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: HTMLElement;\n *   version: string;\n * }} opts\n */\nexport async function start({ env, hydrate, paths, target, version }) {\n\tset_public_env(env);\n\tset_paths(paths);\n\tset_version(version);\n\n\tif (__SVELTEKIT_DEV__ && target === document.body) {\n\t\tconsole.warn(\n\t\t\t`Placing %sveltekit.body% directly inside <body> is not recommended, as your app may break for users who have certain browser extensions installed.\\n\\nConsider wrapping it in an element:\\n\\n<div style=\"display: contents\">\\n  %sveltekit.body%\\n</div>`\n\t\t);\n\t}\n\n\tconst client = create_client({\n\t\ttarget,\n\t\tbase: paths.base\n\t});\n\n\tinit({ client });\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t} else {\n\t\tclient.goto(location.href, { replaceState: true });\n\t}\n\n\tclient._start_router();\n}\n"],"file":"_app/immutable/start-1ed315b2.js"}